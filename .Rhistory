?print
getwd
getwd()
getwd()
getwd()
setwd("~/Coursera")
setwd("~/Coursera")
getwd()
read.table("hw1_data.csv")
read.csv("hw1_data.csv")
read.table("hw1_data.csv")
read.csv("hw1_data.csv", nrows=4)
read.csv("hw1_data.csv", skip=151)
?read.csv
read.csv("hw1_data.csv",skip=46)
readLine(read.csv("hw1_data.csv"),10)
readLines(read.csv("hw1_data.csv"),10)
read.table(header- TRUE,"hw1_data.csv")
read.table(header= TRUE,"hw1_data.csv")
read.csv("hw1_data.csv")
read.table(header=true,fill=true, "hw1_data.csv")
read.table(header=TRUE,fill=TRUE, "hw1_data.csv")
read.table(header=TRUE, sep = ",", fill=TRUE, "hw1_data.csv")
data<-read.table(header=TRUE, sep = ",", fill=TRUE, "hw1_data.csv")
is.na(data)
count(is.na(data["Ozone"]))
is.na(data["Ozone"])
a[is.na(data["Ozone"])]
a<-is.na(data["Ozone"])
a[TRUE]
a
a[names(a)==TRUE]
a[names(a)=="TRUE"]
a[names(a)]
b<-table(a)
b
data
colMeans(data, na.rm = TRUE, dims = 1)
good <- complete.cases(data)
data
airq<-good <- complete.cases(data)
airq
data[47]
data["Ozone",47]
data[47,1]
data[47,"Ozone"]
data.df<-data.frame(data)
names(data.df)
data.sub<-subset(data.df, "Ozone" > 30, "Temp" > 90)
colMeans(data.sub, na.rm = TRUE, dims = 1)
data.sub2<-subset(data.df,"Month"==6)
colMeans(data.sub1, na.rm = TRUE, dims = 1)
colMeans(data.sub2, na.rm = TRUE, dims = 1)
data.sub2<-subset(data.df,"Month" == 6)
data.sub2<-subset(data.df,"Month" = 6)
data.sub2<-subset(data.df,"Month" == 6)
View(data.sub)
data.sub2<-subset(data.df,Month == 6)
colMeans(data.sub2, na.rm = TRUE, dims = 1)
data.sub<-subset(data.df, Ozone > 30, Temp > 90)
colMeans(data.sub, na.rm = TRUE, dims = 1)
View(data.sub)
View(data.sub2)
View(data.sub)
data.sub<-subset(data.df, Ozone > 30, Temp > 90)
data.sub<-subset(data.df, Ozone >= 31, Temp >= 91)
data.sub<-subset(data.df)
data.sub<-subset(data.df, Ozone >= 31, Temp >= 91)
data.sub<-subset(data.df)
data.sub<-subset(data.df, Ozone > 30 & Temp >90
)
data.sub<-subset(data.df, Ozone > 30 & Temp >90)
colMeans(data.sub, na.rm = TRUE, dims = 1)
data.sub<-subset(data.df, Ozone > 31 & Temp >90)
colMeans(data.sub, na.rm = TRUE, dims = 1)
max.col(data.df)
with(datadf, Ozone[Ozone== max([c=="foo"])])
with(datadf, Ozone[Ozone== max(Ozone[Month==5])])
with(data.df, Ozone[Ozone== max(Ozone[Month==5])])
with(data.df, max(Ozone[Month==5]))
with(data.df, max(Ozone[Month=="5"]))
with(data.df, max(Ozone)
)
colMaxs(data.df,   na.rm = TRUE, dims = 1, n = NULL)
?which.max
?max.col
data.sub3<-[data.df, Month == 5]
data.sub3<-subset(data.df, Month == 5)
table(max.col(data.sub3))
max.col(data.sub3)
data.sub3
ozone<-data.sub3[Ozone]
ozone<-data.sub3["Ozone"]
ozone
which.max(ozone)
max(ozone)
max(ozone, na.rm = TRUE)
data.df[3]
data.df[1:3]
data.df(1:3,)
data.df[1:3,]
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
data.df[151:153,]
data.df[47,]
table(is.na(ozone))
table(is.na(data.df))
table(is.na(data.df[Ozone]))
table(is.na(data.df["Ozone"]))
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
x
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0,10,by=.5)
seq(5,10, length=30)
my_seq<-seq(5,10,lenght=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=1-)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect<-c(0.5,55,-10,)
num_vect<-c(0.5,55,-10,6)
tf<-num_Vect<1
tf<-num_vect<1
tf
num_vect >= 6
my_char<-c("My","name","is")
my_char
paste(my_char=" ")
paste(my_char, collapse=" ")
my_name<-c(my_char,"Austin")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), sep="")
Try paste(LETTERS, 1:4, sep = "-"),
paste(LETTERS, 1:4, sep = "-"),
paste(LETTERS, 1:4, sep = "-")
x<-c(44,NA,4,NA)
x<-c(44,NA,5,NA)
x x 3
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0[]]
x[0]
x[3000]
x[c(-2,10)]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo =11, bar =2, narf=NA)
vect<-c(foo =11, bar =2, norf=NA)
vect
names(vect)
vect<-c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<- c()c("foo", "bar",
| "norf")
names(vect2)<- c("foo", "bar", "norf")
play()
vect<vect2
vect<-vect
nxt()
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
mv_vector
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector<-c(4,5))
dim(my_vector)<-c(4,5))
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2(data=1:20, nrow=4, ncol=5)
my_matrix2<-matrix(data=1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
names<-c("patient", "age", "weight", "bp", "rating", "test")
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data,cnames)
colnames(my_data)<-cnames
my_data
install_from_swirl("Regression Models")
install_from_swirl("Data Analysis")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Open Intro")
swirl()
install.packages("tidyr")
install.packages("RMySQL")
install.packages("RMySQL", repo=NULL, type=source)
install.packages("RMySQL", type=source)
install.packages("http://cran.r-project.org/src/contrib/RMySQL_0.9-3.tar.gz", repo=NULL, type=source)
install.packages("http://cran.r-project.org/src/contrib/RMySQL_0.9-3.tar.gz",  type=source)
install.packages("http://cran.r-project.org/src/contrib/RMySQL_0.9-3.tar.gz")
install.packages(http://cran.r-project.org/src/contrib/RMySQL_0.9-3.tar.gz, repo=NULL, type=source)
install.packages("http://cran.r-project.org/src/contrib/RMySQL_0.9-3.tar.gz", repo=NULL, type="source")
install.packages("DBI")
install.packages("http://cran.r-project.org/src/contrib/RMySQL_0.9-3.tar.gz", repo=NULL, type="source")
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
R CMD INSTALL --configure-args='--with-mysql-dir=DIR' RMySQL_<version>.tar.gz
install.pacakges("RTools")
install.pacakges("RTools")
install.packages("RTools")
install.packages("Rtools")
install.packages("rtools")
install.packages('RMySQL',type='source')
R CMD INSTALL RMySQL_<version>.tar.gz
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages("sqldf")
install.packages(httr)
install.packages(ttr)
install.packages(TTr)
install.packages(TTR)
library(httr)
library(httr)
install.packages("httr")
library(httr)
oauth_endpoints("github")
?oauth_app
myapp <- oauth_app("github", "cec3e1d5fe12c82c41ef", "8688a445ea66748a0a10021c8ab5b314885296b0")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
install.packages("httpus")
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
stop_for_status(req)
content)req
content(req)
f <- content(req)
f$repos
f[[27]]
f[[27]][1]
f[[27]]$name
?select
?dplyr
install.packages(c("lubridate, "dplyr""))
install.packages(c("lubridate, "dplyr"))
install.packages(c("lubridate", "dplyr"))
filter(f, name == "datasharing")
filter(f, f$name == "datasharing")
filter(f, f[[]]$name == "datasharing")
f$name
f[[]]
f[[,]]
f$repos
ff
f
f$[[28]]$name
f[[28]]$name
f[[29]]$name
f[[1]]$name
f[[2]]$name
f[[3]]$name
f[[4]]$name
f[[5]]$name
f[[5]]
f[[5]]$created
acs <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv" , destfile="~/Coursera/data/ghb.csv", method="curl")
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs
acs <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv" , destfile="~/Coursera/data/ghb.csv", method="curl")
acs
fread(acs)
install.packages(data.table)
install.packages("data.table)
""
install.packages("data.table")
library(dplyr)
library(data.table)
filter(f, name == "datasharing")
fread(acs)
fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", method="curl")
?fread
acs <- fread("~/Coursera/data/ghb.csv")
acs
fread(acs)
fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
head()sqldf("select pwgtp1 from acs where AGEP < 50")
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
nvhar(acs)
nchar(acs)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
con
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(httr)
html2 = GET(con)
html2 = GET("http://biostat.jhsph.edu/~jleek/contact.html")
content2 =  content(html2,as="text")
parsedHtml = htmlParse(content2, asText=TRUE)
libraru(XML)
library(XML)
install.packages("XML")
library(XML)
parsedHtml = htmlParse(content2, asText=TRUE)
parsedHtml
parsedHtml[10]
htmlCode = readLines(con)
close(con)
htmlCod
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
install.packages("for")
read.for
read.fortran
read.fortran("http://biostat.jhsph.edu/~jleek/contact.html ")
read.fortran("http://biostat.jhsph.edu/~jleek/contact.html")
?read.fortran
ff <- tempfile()
cat(file = ff, "123456", "987654", sep = "\n")
read.fortran(ff, c("F2.1","F2.0","I2"))
read.fortran(ff, c("2F1.0","2X","2A1"))
ff
getwd()
read.fortran("./data/getdata-wksst8110.for",
/read.fwf
read.fortran("./data/getdata-wksst8110.for", 5)
read.fortran("./data/getdata-wksst8110.for", 5, TRUE)
read.fortran("./data/getdata-wksst8110.for", header = TRUE
)
forfile <- "./data/getdata-wksst8110.for"
forfile
listfiles()
listfile()
list()
lis()
list.files()
./data
list.files("./data")
read.fwf(forfile, width = 5, header =true)
read.fwf(forfile, width = 5, header = TRUE)
fread(forfile)
lkop <- read.fwf(forfile, width = 5, header = TRUE)
View(lkop)
lkop <- read.fwf(forfile, header = TRUE)
lkop <- read.fwf(forfile, widths = c(5,5,5,5) header = TRUE)
lkop <- read.fwf(forfile, widths = c(5,5,5,5),  header = TRUE)
lkop <- read.fwf(forfile, widths = c(5,5,5),  header = TRUE)
lkop <- read.fwf(forfile, widths = c(5,5,5),  header = TRUE , skip = 1)
lkop <- read.fwf(forfile, widths = c(5),  header = TRUE , skip = 2)
View(lkop)
lkop <- read.fwf(forfile, widths = c(5),  header = TRUE , skip = 3)
View(data.sub)
View(lkop)
lkop <- read.fwf(forfile, widths = c(5),  header = TRUE , skip = 3, sep="\ ")
lkop <- read.fwf(forfile, widths = c(5),  header = TRUE , skip = 3, sep = "\n ")
lkop <- read.fwf(forfile, widths = c(5),  header = TRUE , skip = 3, sep = "\n")
View(data.sub)
View(lkop)
View(lkop)
lkop <- read.fwf(forfile, widths = c(5),  header = TRUE , skip = 3, sep = "\t")
View(data.df)
View(lkop)
lkop <- read.fwf(forfile, widths = c(5),  header = TRUE , skip = 3, sep = " ")
lkop <- read.fwf(forfile, widths = c(90),  header = TRUE , skip = 3)
View(lkop)
lkop <- read.fwf(forfile, widths = c(5,5,),  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = c(5,5,5),  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = 5,  header = TRUE , skip = 3)
View(lkop)
lkop <- read.fwf(forfile, widths = c(1,2,3),  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = (5) ,  header = TRUE , skip = 3, col.names)
lkop <- read.fwf(forfile, widths = (5) ,  header = TRUE , ,skip = 3,, col.names)
lkop <- read.fwf(forfile, widths = (5) ,  header = TRUE , ,skip = 3,, col.names,,)
lkop <- read.fwf(forfile, widths = (,,,,5) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = (,5) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = (5) ,  header = TRUE , skip = 3)
View(lkop)
fread(forfile)
?fread
fread(forfile, skip=3L)
forfile
forfile1 = "./data/getdata-wksst8110.txt"
fread(forfile, skip = 3)
fread(forfile1, skip = 3)
fread(forfile1, skip = 3)
fread(forfile1)
fread(forfile1)
lkop <- read.fwf(forfile1, widths = (5) ,  header = TRUE )
View(lkop)
lkop <- read.fwf(forfile1, widths = (5,5,5,5) ,  header = TRUE )
lkop <- read.fwf(forfile1, widths = (5,5) ,  header = TRUE )
lkop <- read.fwf(forfile1, widths = (5) ,  header = TRUE )
View(my_data)
View(lkop)
View(my_data)
lkop <- read.fwf(forfile, widths = (5,5) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = c(5,5,5,5) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = c(5,4) ,  header = TRUE , skip = 3)
?read.fwf
lkop <- read.fwf(forfile, widths = c(7,8,8,8,8) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = c(7,8,8,8) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = c(7,8,8) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = c(7,8) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = list(c(1,0, 2,3), c(2,2,2)) ,  header = TRUE , skip = 3)
lkop <- read.fwf(forfile, widths = c(9,-5,8) ,  header = TRUE , skip = 4)
lkop <- read.fwf(forfile, widths = c(9,-5,8) ,  header = TRUE , skip = 4, as.is=FALSE)
lkop <- read.fwf(forfile, widths = c(9,-5,8) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = c(9,-5,9) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = c(9,-5,9,10) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = c(9,-5,9,-5) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = c(9,-5,9,-59) ,  header = FALSE , skip = 4, as.is=FALSE)
View(data.sub2)
View(lkop)
lkop <- read.fwf(forfile, widths = c(9,-5,9,-5,9) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = c(9,-5,8,-5,8,-5,8,-58) ,  header = FALSE , skip = 4, as.is=FALSE)
lkop <- read.fwf(forfile, widths = c(9,-5,8,-5,8,-5,8,-5,8) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = c(9,-5,9,-5,9,-5,9,-5,9) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
View(lkop)
lkop <- read.fwf(forfile, widths = list(c(9,-5), c(9.-5)) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = list(c(10,-5), c(9.-5)) ,  header = FALSE , skip = 4, as.is=FALSE)
View(lkop)
lkop <- read.fwf(forfile, widths = list(c(10,-5), c(8,-5)) ,  header = FALSE , skip = 4, as.is=FALSE)
View(data.sub2)
View(lkop)
lkop <- read.fwf(forfile, widths = list(c(10,-5), c(8,-5),c(8,-5),c(8,-5),c(8,-5)) ,  header = FALSE , skip = 4, as.is=FALSE)
View(data.sub)
View(lkop)
lkop <- read.fwf(forfile, widths = list(c(10,-5), c(8,-5),c(8,-5),c(8,-5),c(8,-5)) ,  header = FALSE , skip = 4, as.is=TRUE)
View(data.sub3)
View(lkop)
mean(lkop[4])
mean(as.numeric(lkop[4])
)
lkop <- read.fwf(forfile, widths = c(10,-5,8,-5,8,-5,8,-5,8) ,  header = FALSE , skip = 4, as.is=TRUE)
View(data.sub)
View(lkop)
class(lkop$V5)
lkop <- read.fwf(forfile, widths = c(10,-5,4,-1,3,-5,8,-5,8,-5,8) ,  header = FALSE , skip = 4, as.is=TRUE)
View(data.sub2)
View(data.sub3)
View(lkop)
lkop <- read.fwf(forfile, widths = c(10,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3) ,  header = FALSE , skip = 4, as.is=TRUE)
View(lkop)
sum(lkop[5])
sum(lkop[4])
getwd()
setwd(~/Coursera/Getting_Cleaning_DAta)
setwd("~/Coursera/Getting_Cleaning_Data")
list.files()
